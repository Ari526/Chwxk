{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\H534493\\\\Downloads\\\\react-kanban-ui-main\\\\react-kanban-ui-main\\\\src\\\\components\\\\kanban\\\\index.jsx\",\n    _s = $RefreshSig$();\n\n// src/components/Kanban.js\nimport React, { useState } from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport mockData from '../../mockData';\nimport Card from '../Card';\nimport './Kanban.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Kanban = () => {\n  _s();\n\n  const [data, setData] = useState(mockData);\n\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColIndex = data.findIndex(e => e.id === source.droppableId);\n      const destinationColIndex = data.findIndex(e => e.id === destination.droppableId);\n      const sourceCol = data[sourceColIndex];\n      const destinationCol = data[destinationColIndex];\n      const sourceTask = [...sourceCol.tasks];\n      const destinationTask = [...destinationCol.tasks];\n      const [removed] = sourceTask.splice(source.index, 1);\n      destinationTask.splice(destination.index, 0, removed);\n      data[sourceColIndex].tasks = sourceTask;\n      data[destinationColIndex].tasks = destinationTask;\n      setData(data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-board\",\n      children: data.map(section => /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: section.id,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n          ref: provided.innerRef,\n          className: \"kanban-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kanban-section-title\",\n            children: [section.title, \" (\", section.tasks.length, \" tasks)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kanban-section-content\",\n            children: [section.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: task.id,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                className: \"kanban-task\",\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 25\n              }, this)\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)\n      }, section.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Kanban, \"oIRgy7RQAbb/Nqz6S99Ewf5cmgo=\");\n\n_c = Kanban;\nexport default Kanban;\n\nvar _c;\n\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"sources":["C:/Users/H534493/Downloads/react-kanban-ui-main/react-kanban-ui-main/src/components/kanban/index.jsx"],"names":["React","useState","DragDropContext","Draggable","Droppable","mockData","Card","Kanban","data","setData","onDragEnd","result","destination","source","droppableId","sourceColIndex","findIndex","e","id","destinationColIndex","sourceCol","destinationCol","sourceTask","tasks","destinationTask","removed","splice","index","map","section","provided","droppableProps","innerRef","title","length","task","snapshot","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["// src/components/Kanban.js\nimport React, { useState } from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport mockData from '../../mockData';\nimport Card from '../Card';\nimport './Kanban.css';\n\nconst Kanban = () => {\n  const [data, setData] = useState(mockData);\n\n  const onDragEnd = (result) => {\n    if (!result.destination) return;\n    const { source, destination } = result;\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColIndex = data.findIndex((e) => e.id === source.droppableId);\n      const destinationColIndex = data.findIndex((e) => e.id === destination.droppableId);\n\n      const sourceCol = data[sourceColIndex];\n      const destinationCol = data[destinationColIndex];\n\n      const sourceTask = [...sourceCol.tasks];\n      const destinationTask = [...destinationCol.tasks];\n\n      const [removed] = sourceTask.splice(source.index, 1);\n      destinationTask.splice(destination.index, 0, removed);\n\n      data[sourceColIndex].tasks = sourceTask;\n      data[destinationColIndex].tasks = destinationTask;\n\n      setData(data);\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"kanban-board\">\n        {data.map((section) => (\n          <Droppable key={section.id} droppableId={section.id}>\n            {(provided) => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"kanban-section\"\n              >\n                <div className=\"kanban-section-title\">\n                  {section.title} ({section.tasks.length} tasks)\n                </div>\n                <div className=\"kanban-section-content\">\n                  {section.tasks.map((task, index) => (\n                    <Draggable\n                      key={task.id}\n                      draggableId={task.id}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          className=\"kanban-task\"\n                        >\n                          {task.title}\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              </div>\n            )}\n          </Droppable>\n        ))}\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default Kanban;\n"]},"metadata":{},"sourceType":"module"}