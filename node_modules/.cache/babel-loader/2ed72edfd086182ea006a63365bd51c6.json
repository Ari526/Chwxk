{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\H534493\\\\Downloads\\\\react-kanban-ui-main\\\\react-kanban-ui-main\\\\src\\\\components\\\\kanban\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport mockData from '../../mockData';\nimport Card from '../Card'; // Update the import path for your Card component\n\nimport './kanban.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Kanban = () => {\n  _s();\n\n  const [data, setData] = useState(mockData);\n\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColIndex = data.findIndex(e => e.id === source.droppableId);\n      const destinationColIndex = data.findIndex(e => e.id === destination.droppableId);\n      const sourceCol = data[sourceColIndex];\n      const destinationCol = data[destinationColIndex];\n      const sourceTask = [...sourceCol.tasks];\n      const destinationTask = [...destinationCol.tasks];\n      const [removed] = sourceTask.splice(source.index, 1);\n      destinationTask.splice(destination.index, 0, removed);\n      data[sourceColIndex].tasks = sourceTask;\n      data[destinationColIndex].tasks = destinationTask;\n      setData([...data]);\n    }\n  };\n\n  const handleAddTask = () => {\n    const newTask = {\n      id: `task-${Date.now()}`,\n      title: 'New Task',\n      icon: 'profile-icon-1.png',\n      // Provide the image file path\n      heading: 'Task X',\n      // Customize as needed\n      description: 'Task description...' // Add your description\n\n    }; // Add the new task to the 'To Do' column (or any other column you prefer)\n\n    const todoColumn = data.find(column => column.title === ' ðŸ“ƒ To do');\n\n    if (todoColumn) {\n      todoColumn.tasks.push(newTask);\n    }\n\n    setData([...data]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), data.map(section => /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: section.id,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n          ref: provided.innerRef,\n          className: \"kanban-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kanban-section-title\",\n            children: [section.title, \" (\", section.tasks.length, \" tasks)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kanban-section-content\",\n            children: [section.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: task.id,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                className: \"kanban-task\",\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  icon: task.icon,\n                  heading: task.heading,\n                  description: task.description,\n                  children: task.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 25\n              }, this)\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, section.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Kanban, \"oIRgy7RQAbb/Nqz6S99Ewf5cmgo=\");\n\n_c = Kanban;\nexport default Kanban;\n\nvar _c;\n\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"sources":["C:/Users/H534493/Downloads/react-kanban-ui-main/react-kanban-ui-main/src/components/kanban/index.jsx"],"names":["React","useState","DragDropContext","Draggable","Droppable","mockData","Card","Kanban","data","setData","onDragEnd","result","source","destination","droppableId","sourceColIndex","findIndex","e","id","destinationColIndex","sourceCol","destinationCol","sourceTask","tasks","destinationTask","removed","splice","index","handleAddTask","newTask","Date","now","title","icon","heading","description","todoColumn","find","column","push","map","section","provided","droppableProps","innerRef","length","task","snapshot","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport mockData from '../../mockData';\nimport Card from '../Card'; // Update the import path for your Card component\nimport './kanban.css';\n\nconst Kanban = () => {\n  const [data, setData] = useState(mockData);\n\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n    if (!destination) return;\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColIndex = data.findIndex((e) => e.id === source.droppableId);\n      const destinationColIndex = data.findIndex((e) => e.id === destination.droppableId);\n\n      const sourceCol = data[sourceColIndex];\n      const destinationCol = data[destinationColIndex];\n\n      const sourceTask = [...sourceCol.tasks];\n      const destinationTask = [...destinationCol.tasks];\n\n      const [removed] = sourceTask.splice(source.index, 1);\n      destinationTask.splice(destination.index, 0, removed);\n\n      data[sourceColIndex].tasks = sourceTask;\n      data[destinationColIndex].tasks = destinationTask;\n\n      setData([...data]);\n    }\n  };\n\n  const handleAddTask = () => {\n    const newTask = {\n      id: `task-${Date.now()}`,\n      title: 'New Task',\n      icon: 'profile-icon-1.png', // Provide the image file path\n      heading: 'Task X', // Customize as needed\n      description: 'Task description...', // Add your description\n    };\n\n    // Add the new task to the 'To Do' column (or any other column you prefer)\n    const todoColumn = data.find((column) => column.title === ' ðŸ“ƒ To do');\n    if (todoColumn) {\n      todoColumn.tasks.push(newTask);\n    }\n\n    setData([...data]);\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"kanban-board\">\n        <button onClick={handleAddTask}>Add Task</button>\n        {data.map((section) => (\n          <Droppable key={section.id} droppableId={section.id}>\n            {(provided) => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"kanban-section\"\n              >\n                <div className=\"kanban-section-title\">\n                  {section.title} ({section.tasks.length} tasks)\n                </div>\n                <div className=\"kanban-section-content\">\n                  {section.tasks.map((task, index) => (\n                    <Draggable\n                      key={task.id}\n                      draggableId={task.id}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          className=\"kanban-task\"\n                        >\n                          <Card icon={task.icon} heading={task.heading} description={task.description}>\n                            {task.title}\n                          </Card>\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              </div>\n            )}\n          </Droppable>\n        ))}\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default Kanban;\n"]},"metadata":{},"sourceType":"module"}