{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\H534493\\\\Downloads\\\\react-kanban-ui-main\\\\react-kanban-ui-main\\\\src\\\\components\\\\kanban\\\\index.jsx\",\n    _s = $RefreshSig$();\n\n// src/components/Kanban.js\nimport './Kanban.css';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport mockData from './mockData';\nimport { useState } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Kanban = () => {\n  _s();\n\n  const [data, setData] = useState(mockData);\n\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColIndex = data.findIndex(e => e.id === source.droppableId);\n      const destinationColIndex = data.findIndex(e => e.id === destination.droppableId);\n      const sourceCol = data[sourceColIndex];\n      const destinationCol = data[destinationColIndex];\n      const sourceTask = [...sourceCol.tasks];\n      const destinationTask = [...destinationCol.tasks];\n      const [removed] = sourceTask.splice(source.index, 1);\n      destinationTask.splice(destination.index, 0, removed);\n      data[sourceColIndex].tasks = sourceTask;\n      data[destinationColIndex].tasks = destinationTask;\n      setData(data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban\",\n        children: data.map(section => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: section.id,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n            className: \"kanban__section\",\n            ref: provided.innerRef,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"kanban__section__title\",\n              children: [section.title, \" (\", section.tasks.length, \" tasks)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"kanban__section__content\",\n              children: [section.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: task.id,\n                index: index,\n                children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  style: { ...provided.draggableProps.style,\n                    opacity: snapshot.isDragging ? '0.5' : '1'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: task.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 27\n                }, this)\n              }, task.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 23\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)\n        }, section.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Kanban, \"oIRgy7RQAbb/Nqz6S99Ewf5cmgo=\");\n\n_c = Kanban;\nexport default Kanban;\n\nvar _c;\n\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"sources":["C:/Users/H534493/Downloads/react-kanban-ui-main/react-kanban-ui-main/src/components/kanban/index.jsx"],"names":["DragDropContext","Draggable","Droppable","mockData","useState","Card","Kanban","data","setData","onDragEnd","result","destination","source","droppableId","sourceColIndex","findIndex","e","id","destinationColIndex","sourceCol","destinationCol","sourceTask","tasks","destinationTask","removed","splice","index","map","section","provided","droppableProps","innerRef","title","length","task","snapshot","draggableProps","dragHandleProps","style","opacity","isDragging","placeholder"],"mappings":";;;AAAA;AAEA,OAAO,cAAP;AACA,SAASA,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAACD,QAAD,CAAhC;;AAEA,QAAMM,SAAS,GAAIC,MAAD,IAAY;AAC5B,QAAI,CAACA,MAAM,CAACC,WAAZ,EAAyB;AACzB,UAAM;AAAEC,MAAAA,MAAF;AAAUD,MAAAA;AAAV,QAA0BD,MAAhC;;AAEA,QAAIE,MAAM,CAACC,WAAP,KAAuBF,WAAW,CAACE,WAAvC,EAAoD;AAClD,YAAMC,cAAc,GAAGP,IAAI,CAACQ,SAAL,CAAgBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACC,WAAtC,CAAvB;AACA,YAAMK,mBAAmB,GAAGX,IAAI,CAACQ,SAAL,CAAgBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASN,WAAW,CAACE,WAA3C,CAA5B;AAEA,YAAMM,SAAS,GAAGZ,IAAI,CAACO,cAAD,CAAtB;AACA,YAAMM,cAAc,GAAGb,IAAI,CAACW,mBAAD,CAA3B;AAEA,YAAMG,UAAU,GAAG,CAAC,GAAGF,SAAS,CAACG,KAAd,CAAnB;AACA,YAAMC,eAAe,GAAG,CAAC,GAAGH,cAAc,CAACE,KAAnB,CAAxB;AAEA,YAAM,CAACE,OAAD,IAAYH,UAAU,CAACI,MAAX,CAAkBb,MAAM,CAACc,KAAzB,EAAgC,CAAhC,CAAlB;AACAH,MAAAA,eAAe,CAACE,MAAhB,CAAuBd,WAAW,CAACe,KAAnC,EAA0C,CAA1C,EAA6CF,OAA7C;AAEAjB,MAAAA,IAAI,CAACO,cAAD,CAAJ,CAAqBQ,KAArB,GAA6BD,UAA7B;AACAd,MAAAA,IAAI,CAACW,mBAAD,CAAJ,CAA0BI,KAA1B,GAAkCC,eAAlC;AAEAf,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD;AACF,GAtBD;;AAwBA,sBACE;AAAA,2BACE,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAEE,SAA5B;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBACGF,IAAI,CAACoB,GAAL,CAAUC,OAAD,iBACR,QAAC,SAAD;AAA4B,UAAA,WAAW,EAAEA,OAAO,CAACX,EAAjD;AAAA,oBACIY,QAAD,iBACC,oBACMA,QAAQ,CAACC,cADf;AAEE,YAAA,SAAS,EAAC,iBAFZ;AAGE,YAAA,GAAG,EAAED,QAAQ,CAACE,QAHhB;AAAA,oCAKE;AAAK,cAAA,SAAS,EAAC,wBAAf;AAAA,yBACGH,OAAO,CAACI,KADX,QACoBJ,OAAO,CAACN,KAAR,CAAcW,MADlC;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAQE;AAAK,cAAA,SAAS,EAAC,0BAAf;AAAA,yBACGL,OAAO,CAACN,KAAR,CAAcK,GAAd,CAAkB,CAACO,IAAD,EAAOR,KAAP,kBACjB,QAAC,SAAD;AAEE,gBAAA,WAAW,EAAEQ,IAAI,CAACjB,EAFpB;AAGE,gBAAA,KAAK,EAAES,KAHT;AAAA,0BAKG,CAACG,QAAD,EAAWM,QAAX,kBACC;AACE,kBAAA,GAAG,EAAEN,QAAQ,CAACE,QADhB;AAAA,qBAEMF,QAAQ,CAACO,cAFf;AAAA,qBAGMP,QAAQ,CAACQ,eAHf;AAIE,kBAAA,KAAK,EAAE,EACL,GAAGR,QAAQ,CAACO,cAAT,CAAwBE,KADtB;AAELC,oBAAAA,OAAO,EAAEJ,QAAQ,CAACK,UAAT,GAAsB,KAAtB,GAA8B;AAFlC,mBAJT;AAAA,yCASE,QAAC,IAAD;AAAA,8BAAON,IAAI,CAACF;AAAZ;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA;AANJ,iBACOE,IAAI,CAACjB,EADZ;AAAA;AAAA;AAAA;AAAA,sBADD,CADH,EAsBGY,QAAQ,CAACY,WAtBZ;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,WAAgBb,OAAO,CAACX,EAAxB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD,CA1ED;;GAAMX,M;;KAAAA,M;AA4EN,eAAeA,MAAf","sourcesContent":["// src/components/Kanban.js\n\nimport './Kanban.css';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport mockData from './mockData';\nimport { useState } from 'react';\nimport Card from './Card';\n\nconst Kanban = () => {\n  const [data, setData] = useState(mockData);\n\n  const onDragEnd = (result) => {\n    if (!result.destination) return;\n    const { source, destination } = result;\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColIndex = data.findIndex((e) => e.id === source.droppableId);\n      const destinationColIndex = data.findIndex((e) => e.id === destination.droppableId);\n\n      const sourceCol = data[sourceColIndex];\n      const destinationCol = data[destinationColIndex];\n\n      const sourceTask = [...sourceCol.tasks];\n      const destinationTask = [...destinationCol.tasks];\n\n      const [removed] = sourceTask.splice(source.index, 1);\n      destinationTask.splice(destination.index, 0, removed);\n\n      data[sourceColIndex].tasks = sourceTask;\n      data[destinationColIndex].tasks = destinationTask;\n\n      setData(data);\n    }\n  };\n\n  return (\n    <div>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div className=\"kanban\">\n          {data.map((section) => (\n            <Droppable key={section.id} droppableId={section.id}>\n              {(provided) => (\n                <div\n                  {...provided.droppableProps}\n                  className=\"kanban__section\"\n                  ref={provided.innerRef}\n                >\n                  <div className=\"kanban__section__title\">\n                    {section.title} ({section.tasks.length} tasks)\n                  </div>\n                  <div className=\"kanban__section__content\">\n                    {section.tasks.map((task, index) => (\n                      <Draggable\n                        key={task.id}\n                        draggableId={task.id}\n                        index={index}\n                      >\n                        {(provided, snapshot) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={{\n                              ...provided.draggableProps.style,\n                              opacity: snapshot.isDragging ? '0.5' : '1',\n                            }}\n                          >\n                            <Card>{task.title}</Card>\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default Kanban;\n"]},"metadata":{},"sourceType":"module"}