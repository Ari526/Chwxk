{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\H534493\\\\Downloads\\\\react-kanban-ui-main\\\\react-kanban-ui-main\\\\src\\\\components\\\\kanban\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport './kanban.scss';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport mockData from '../../mockData';\nimport { useState } from 'react';\nimport Card from '../card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Kanban = () => {\n  _s();\n\n  const [data, setData] = useState(mockData);\n\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColIndex = data.findIndex(e => e.id === source.droppableId);\n      const destinationColIndex = data.findIndex(e => e.id === destination.droppableId);\n      const sourceCol = data[sourceColIndex];\n      const destinationCol = data[destinationColIndex];\n      const sourceTask = [...sourceCol.tasks];\n      const destinationTask = [...destinationCol.tasks];\n      const [removed] = sourceTask.splice(source.index, 1);\n      destinationTask.splice(destination.index, 0, removed);\n      data[sourceColIndex].tasks = sourceTask;\n      data[destinationColIndex].tasks = destinationTask;\n      setData(data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban\",\n      children: data.map(section => /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: section.id,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n          className: \"kanban__section\",\n          ref: provided.innerRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kanban__section__title\",\n            children: section.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kanban__section__content\",\n            children: [section.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: task.id,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                style: { ...provided.draggableProps.style,\n                  opacity: snapshot.isDragging ? '0.5' : '1'\n                },\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  children: task.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 61\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 57\n              }, this)\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 49\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }, this)\n      }, section.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Kanban, \"oIRgy7RQAbb/Nqz6S99Ewf5cmgo=\");\n\n_c = Kanban;\nexport default Kanban;\n\nvar _c;\n\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"sources":["C:/Users/H534493/Downloads/react-kanban-ui-main/react-kanban-ui-main/src/components/kanban/index.jsx"],"names":["DragDropContext","Draggable","Droppable","mockData","useState","Card","Kanban","data","setData","onDragEnd","result","destination","source","droppableId","sourceColIndex","findIndex","e","id","destinationColIndex","sourceCol","destinationCol","sourceTask","tasks","destinationTask","removed","splice","index","map","section","provided","droppableProps","innerRef","title","task","snapshot","draggableProps","dragHandleProps","style","opacity","isDragging","placeholder"],"mappings":"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","sourcesContent":["import './kanban.scss'\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\nimport mockData from '../../mockData'\nimport { useState } from 'react'\nimport Card from '../card'\n\nconst Kanban = () => {\n    const [data, setData] = useState(mockData)\n\n    const onDragEnd = result => {\n        if (!result.destination) return\n        const { source, destination } = result\n\n        if (source.droppableId !== destination.droppableId) {\n            const sourceColIndex = data.findIndex(e => e.id === source.droppableId)\n            const destinationColIndex = data.findIndex(e => e.id === destination.droppableId)\n\n            const sourceCol = data[sourceColIndex]\n            const destinationCol = data[destinationColIndex]\n\n            const sourceTask = [...sourceCol.tasks]\n            const destinationTask = [...destinationCol.tasks]\n\n            const [removed] = sourceTask.splice(source.index, 1)\n            destinationTask.splice(destination.index, 0, removed)\n\n            data[sourceColIndex].tasks = sourceTask\n            data[destinationColIndex].tasks = destinationTask\n\n            setData(data)\n        }\n    }\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <div className=\"kanban\">\n                {\n                    data.map(section => (\n                        <Droppable\n                            key={section.id}\n                            droppableId={section.id}\n                        >\n                            {(provided) => (\n                                <div\n                                    {...provided.droppableProps}\n                                    className='kanban__section'\n                                    ref={provided.innerRef}\n                                >\n                                    <div className=\"kanban__section__title\">\n                                        {section.title}\n                                    </div>\n                                    <div className=\"kanban__section__content\">\n                                        {\n                                            section.tasks.map((task, index) => (\n                                                <Draggable\n                                                    key={task.id}\n                                                    draggableId={task.id}\n                                                    index={index}\n                                                >\n                                                    {(provided, snapshot) => (\n                                                        <div\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n                                                            style={{\n                                                                ...provided.draggableProps.style,\n                                                                opacity: snapshot.isDragging ? '0.5' : '1'\n                                                            }}\n                                                        >\n                                                            <Card>\n                                                                {task.title}\n                                                            </Card>\n                                                        </div>\n                                                    )}\n                                                </Draggable>\n                                            ))\n                                        }\n                                        {provided.placeholder}\n                                    </div>\n                                </div>\n                            )}\n                        </Droppable>\n                    ))\n                }\n            </div>\n        </DragDropContext>\n    )\n}\n\nexport default Kanban"]},"metadata":{},"sourceType":"module"}