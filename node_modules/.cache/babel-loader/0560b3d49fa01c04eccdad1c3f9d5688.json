{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\H534493\\\\Downloads\\\\react-kanban-ui-main\\\\react-kanban-ui-main\\\\src\\\\components\\\\kanban\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport mockData from '../../mockData';\nimport Card from '../Card'; // Update the import path for your Card component\n\nimport './kanban.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Kanban = () => {\n  _s();\n\n  const [data, setData] = useState(mockData);\n  const [isTaskDialogOpen, setIsTaskDialogOpen] = useState(false);\n\n  const openTaskDialog = () => {\n    setIsTaskDialogOpen(true);\n  };\n\n  const closeTaskDialog = () => {\n    setIsTaskDialogOpen(false);\n  };\n\n  const handleAddTask = () => {\n    // Add your task creation logic here\n    // ...\n    // Close the task detail dialog after adding the task\n    closeTaskDialog();\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openTaskDialog,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), data.map(section => /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: section.id,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n          ref: provided.innerRef,\n          className: \"kanban-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kanban-section-title\",\n            children: [section.title, \" (\", section.tasks.length, \" tasks)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kanban-section-content\",\n            children: [section.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: task.id,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                className: \"kanban-task\",\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  icon: task.icon,\n                  heading: task.heading,\n                  description: task.description,\n                  children: task.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 25\n              }, this)\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)\n      }, section.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), isTaskDialogOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-dialog\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Task Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeTaskDialog,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Kanban, \"7AO/0KXSzUHUDzrH8l8ydty8SuE=\");\n\n_c = Kanban;\nexport default Kanban;\n\nvar _c;\n\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"sources":["C:/Users/H534493/Downloads/react-kanban-ui-main/react-kanban-ui-main/src/components/kanban/index.jsx"],"names":["React","useState","DragDropContext","Draggable","Droppable","mockData","Card","Kanban","data","setData","isTaskDialogOpen","setIsTaskDialogOpen","openTaskDialog","closeTaskDialog","handleAddTask","onDragEnd","map","section","id","provided","droppableProps","innerRef","title","tasks","length","task","index","snapshot","draggableProps","dragHandleProps","icon","heading","description","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport mockData from '../../mockData';\nimport Card from '../Card'; // Update the import path for your Card component\nimport './kanban.css';\n\nconst Kanban = () => {\n  const [data, setData] = useState(mockData);\n  const [isTaskDialogOpen, setIsTaskDialogOpen] = useState(false);\n\n  const openTaskDialog = () => {\n    setIsTaskDialogOpen(true);\n  };\n\n  const closeTaskDialog = () => {\n    setIsTaskDialogOpen(false);\n  };\n\n  const handleAddTask = () => {\n    // Add your task creation logic here\n    // ...\n\n    // Close the task detail dialog after adding the task\n    closeTaskDialog();\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"kanban-board\">\n        <button onClick={openTaskDialog}>Add Task</button>\n        {data.map((section) => (\n          <Droppable key={section.id} droppableId={section.id}>\n            {(provided) => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"kanban-section\"\n              >\n                <div className=\"kanban-section-title\">\n                  {section.title} ({section.tasks.length} tasks)\n                </div>\n                <div className=\"kanban-section-content\">\n                  {section.tasks.map((task, index) => (\n                    <Draggable\n                      key={task.id}\n                      draggableId={task.id}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          className=\"kanban-task\"\n                        >\n                          <Card icon={task.icon} heading={task.heading} description={task.description}>\n                            {task.title}\n                          </Card>\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              </div>\n            )}\n          </Droppable>\n        ))}\n      </div>\n\n      {isTaskDialogOpen && (\n        <div className=\"task-dialog\">\n          <h2>Add Task</h2>\n          <input type=\"text\" placeholder=\"Task Title\" />\n          <textarea placeholder=\"Task Description\"></textarea>\n          <button onClick={closeTaskDialog}>Close</button>\n          <button onClick={handleAddTask}>Add Task</button>\n        </div>\n      )}\n    </DragDropContext>\n  );\n};\n\nexport default Kanban;\n"]},"metadata":{},"sourceType":"module"}